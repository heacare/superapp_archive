name: fastlane-beta

on:
  push:
    tags: ['v*']

defaults:
  run:
    working-directory: hea/app
env:
  FLUTTER_VERSION: '3.0'

jobs:
  ios:
    runs-on: [self-hosted, macos-latest]
    environment:
      name: ios-beta
    steps:
      - uses: subosito/flutter-action@6c2e035f2692eeac890d854df95630c72673f130
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      - uses: actions/checkout@v3
        with:
          path: hea
      - uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-flutter-${{ hashFiles('hea/app/**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      - uses: actions/cache@v3
        with:
          path: hea/app/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('hea/app/**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - run: fastlane ios beta
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
      #- name: Upload IPA
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: ios
      #    path: hea/app/Runner.ipa
      #    retention-days: 30
      # The following step can take up to 40 minutes to succeed. Be careful
      # when using GitHub-hosted runners as they cost 10 build minutes per
      # minute of runtime. This will consume around 300 build minutes per iOS
      # build, which roughly sums up to $3 per iOS build.
      # If and when switching back to GitHub-hosted runners, please consider
      # cutting build minutes in half by using `ubuntu-latest` to run the
      # following step. That will cost significantly less money per build. See
      # the version of this workflow in 5e61b1fc5685cc172b1a985b0688132e87c12a1d
      # for a sample on how to do that. It also helps set Deployment statuses.
      - run: fastlane ios beta_distribute
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}

  android:
    runs-on: ubuntu-latest
    environment:
      name: android-beta
    env:
      CODE_SIGNING_REPO: ${{ github.workspace }}/code-signing
    steps:
      - uses: subosito/flutter-action@6c2e035f2692eeac890d854df95630c72673f130
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      - uses: actions/checkout@v3
        with:
          path: hea
      - uses: actions/cache@v3
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.os }}-flutter-${{ hashFiles('hea/app/**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      - uses: actions/checkout@v3
        with:
          repository: happilyeveraftercorp/code-signing
          ssh-key: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          path: code-signing
      - name: Configure keystore
        run: |
          echo "storeFile=${{ env.CODE_SIGNING_REPO }}/android/release.keystore" >> android/key.properties
          echo "keyAlias=hea" >> android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1
          bundler-cache: true
          working-directory: hea/app
      - run: bundle exec fastlane android beta
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.CODE_SIGNING_REPO }}/android/firebase-app-distribution.json
      #- name: Upload APK
      #  uses: actions/upload-artifact@v3
      #  with:
      #    name: android
      #    path: hea/app/build/app/outputs/flutter-apk/app-release.apk
      #    retention-days: 30
# vim: set et ts=2 sw=2:
