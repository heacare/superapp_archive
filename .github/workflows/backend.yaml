name: backend

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths: ["backend/**"]

defaults:
  run:
    working-directory: backend

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: Install npm dependencies
        run: npm ci
      - name: Lint check
        run: npm run ci-lint
      - name: Format check
        run: npm run ci-format

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: Install npm dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Generate OpenAPI Definitions
        run: npm run ci-gen-openapi
      - name: Upload OpenAPI Definitions
        uses: actions/upload-artifact@v2
        with:
          name: openapi.json
          path: backend/openapi.json
          if-no-files-found: error

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [17.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: Install npm dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm run test
