# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  before_all do
     ensure_git_status_clean unless ENV['FL_NO_ENSURE_CLEAN']
  end

  desc "Push a new beta build to TestFlight"
  lane :beta do
    match(type: "appstore", readonly: true)
    sh("flutter", "clean")
    sh("flutter", "build", "ios", "--release", "--no-codesign")
    build_app(
      workspace: "ios/Runner.xcworkspace",
      scheme: "Runner",
    )
    api_key = app_store_connect_api_key(
      key_id: "C47A4TCR5G",
      issuer_id: "21c4a1c9-9d05-4413-b76d-10fca3021b3f",
      key_content: ENV['CONNECT_API_KEY'],
    )
    upload_to_testflight(
      api_key: api_key,
      skip_waiting_for_build_processing: is_ci,
    )
  end
end

platform :android do
  before_all do
     ensure_git_status_clean unless ENV['FL_NO_ENSURE_CLEAN']
  end

  desc "Push a new beta build to Firebase"
  lane :beta do
    sh("flutter", "clean")
    sh("flutter", "build", "apk", "--release")
    firebase_app_distribution(
      app: "1:825250749124:android:721cb5ab745db555090791",
      android_artifact_path: "build/app/outputs/flutter-apk/app-release.apk",
      groups: "automatic",
    )
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    sh("flutter", "clean")
    sh("flutter", "build", "appbundle", "--release")
    upload_to_play_store(
      aab: "build/app/outputs/bundle/release/app-release.aab",
    )
  end
end
